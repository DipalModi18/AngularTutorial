{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authenticate.service.ts","webpack:///./src/app/edit-details.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/my-interceptor.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register.service.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule , Routes} from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nconst routes: Routes = \n[\n  { \n    path: '', \n    component: LoginComponent \n  },\n  {\n    path : 'register',\n    component : RegisterComponent\n  },\n  {\n    path : 'profile',\n    component : ProfileComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  exports : [\n    RouterModule,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent\n    //AppRoutingModule,\n  ],\n  declarations: [\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent\n  ],\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n\\nbody {font-family: Arial, Helvetica, sans-serif;}\\n  \\n/* Full-width input fields */\\n  \\ninput[type=text], input[type=password] {\\n    width: 100%;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n}\\n  \\n/* Set a style for all buttons */\\n  \\nbutton {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n    width: 100%;\\n}\\n  \\nbutton:hover {\\n    opacity: 0.8;\\n}\\n  \\n/* Extra styles for the cancel button */\\n  \\n.cancelbtn {\\n    width: auto;\\n    padding: 10px 18px;\\n    background-color: #f44336;\\n}\\n  \\n.container {\\n    padding: 16px;\\n}\\n  \\nspan.psw {\\n    float: right;\\n    padding-top: 16px;\\n}\\n  \\n/* The Modal (background) */\\n  \\n.modal {\\n    display: none; /* Hidden by default */\\n    position: fixed; /* Stay in place */\\n    z-index: 1; /* Sit on top */\\n    left: 0;\\n    top: 0;\\n    width: 100%; /* Full width */\\n    height: 100%; /* Full height */\\n    overflow: auto; /* Enable scroll if needed */\\n    background-color: rgb(0,0,0); /* Fallback color */\\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\n    padding-top: 60px;\\n}\\n  \\n/* Modal Content/Box */\\n  \\n.modal-content {\\n    background-color: #fefefe;\\n    margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\\n    border: 1px solid #888;\\n    width: 80%; /* Could be more or less, depending on screen size */\\n}\\n  \\n/* The Close Button (x) */\\n  \\n.close {\\n    position: absolute;\\n    right: 25px;\\n    top: 0;\\n    color: #000;\\n    font-size: 35px;\\n    font-weight: bold;\\n}\\n  \\n.close:hover,\\n.close:focus {\\n    color: red;\\n    cursor: pointer;\\n}\\n  \\n/* Add Zoom Animation */\\n  \\n.animate {\\n    -webkit-animation: animatezoom 0.6s;\\n    animation: animatezoom 0.6s\\n}\\n  \\n@-webkit-keyframes animatezoom {\\n    from {-webkit-transform: scale(0)} \\n    to {-webkit-transform: scale(1)}\\n}\\n  \\n@keyframes animatezoom {\\n    from {-webkit-transform: scale(0);transform: scale(0)} \\n    to {-webkit-transform: scale(1);transform: scale(1)}\\n}\\n  \\n/* Change styles for span and cancel button on extra small screens */\\n  \\n@media screen and (max-width: 300px) {\\n    span.psw {\\n       display: block;\\n       float: none;\\n    }\\n    .cancelbtn {\\n       width: 100%;\\n    }\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component } from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {Router, ActivatedRoute, RouterModule} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app'\n  \n  userList : [\n    {\n      username : 'dipal',\n      password : 'modi'\n    }\n  ];\n\n  childTitle:string = 'This text is passed to child';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule, ActivatedRoute} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { AuthenticateService} from './authenticate.service';\nimport { RegisterService} from './register.service';\nimport { EditDetailsService} from './edit-details.service';\nimport { Http, Headers, HttpModule} from '@angular/http';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { MyHttpInterceptor } from './my-interceptor'\nimport { Observable } from 'rxjs/Observable';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // RegisterComponent,\n    // LoginComponent,\n    // ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpModule,\n    HttpClientModule,\n    RouterModule,\n    AppRoutingModule, \n    RouterModule.forRoot([])\n  ],\n  exports : [\n    ReactiveFormsModule,\n  ],\n  providers: [AuthenticateService, RegisterService, EditDetailsService, \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MyHttpInterceptor,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Http, Headers, HttpModule} from '@angular/http';\nimport { HttpClient, HttpClientModule} from '@angular/common/http';\nimport {Router, ActivatedRoute} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n  authenticated;\n\n  constructor(private http : HttpClient, private route:ActivatedRoute,private router:Router) { }\n\n  authenticate_user(uname, pw)\n  {\n    console.log('In authenticate_user  :username :'+uname+' password :'+pw);\n\n    //writing sentences after authentication in subscribe\n    this.call_server(uname, pw).subscribe( data => {this.authenticated = data,\n      console.log('In authenticate_user inside subscribe :'+this.authenticated);\n      if(this.authenticated == true)\n      {\n        console.log('User authenticated successfully!!');\n        alert(\"logged in successfully!\");\n         this.router.navigate(['/profile'],{relativeTo:this.route});\n         this.authenticated = false;\n      }\n      else\n      {\n        console.log('In Invalid credentials else : Authenticated :'+this.authenticated);\n        alert(\"invalid credentials!\");\n      }\n    });\n    return this.authenticated;\n  }\n\n  call_server(uname, pw) :Observable<boolean>\n  {\n    return this.http.post<boolean>('http://localhost:8080/user', { username : uname, password: pw}, {}); //{ withCredentials: true }\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Router, ActivatedRoute} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EditDetailsService {\n\n  constructor(private http : HttpClient, private route:ActivatedRoute, private router:Router) { };\n\n  edit_user(na, a, uname, pw)\n  {\n    this.call_Server(na, a, uname, pw).subscribe();\n      alert('User details saved successfully');\n      //this.router.navigate(['/profile'],{relativeTo:this.route});\n  }\n\n  call_Server(na, a, uname, pw)\n  {\n    return this.http.post('http://localhost:8080/edit', { name : na, age:a, username : uname, password :pw}, { withCredentials: true });\n  }\n}\n","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\n  \\n  <div class=\\\"modal\\\" style=\\\"display: block\\\">\\n    <form class=\\\"modal-content animate\\\" [formGroup]=\\\"formdata\\\" (ngSubmit)=\\\"onSubmit(formdata.value)\\\">\\n  \\n      <div class=\\\"container\\\">\\n        <label for=\\\"uname\\\"><b>Username</b></label><span style=\\\"color: red\\\">*</span>\\n        <input type=\\\"text\\\" placeholder=\\\"Enter Username\\\" name=\\\"Username\\\" formControlName=\\\"username\\\">\\n        <div *ngIf=\\\" username.errors?.required && ( !username.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Name is required.</div>\\n  \\n        <label for=\\\"psw\\\"><b>Password</b></label><span style=\\\"color: red\\\">*</span>\\n        <input type=\\\"{{input_type}}\\\" placeholder=\\\"Enter Password\\\" name=\\\"Password\\\" formControlName=\\\"password\\\">\\n        <input type=\\\"checkbox\\\" name=\\\"password_state\\\" value=\\\"Show Password\\\" (change)=\\\"onCheckboxChange()\\\">Show Password<br>\\n        <div *ngIf=\\\" password.errors?.required && ( !password.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Password is required.</div>\\n          \\n        <!--Not disabling on submit so that in onSubmit() submiteed can be set to true for validation purpose-->\\n        <button type=\\\"submit\\\" >Login</button> <!--[disabled]=\\\"formdata.invalid\\\"-->\\n      </div>\\n  \\n      <div class=\\\"container\\\" style=\\\"background-color:#f1f1f1\\\">\\n        <button type=\\\"button\\\" class=\\\"cancelbtn\\\" (click)=\\\"onCancelClick()\\\">Cancel</button>\\n        <span>    </span>\\n        <p>Not Having an Account? Register Here</p>\\n        <a RouterLinkActive=\\\"active\\\" (click)=\\\"onRegisterClick()\\\" target=\\\"_top\\\">Register</a>\\n        \\n      </div>\\n    </form>\\n  </div>\\n  \\n\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport {FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { AuthenticateService} from './../authenticate.service';\nimport { HttpClient} from '@angular/common/http';\nimport { RouterTestingModule } from '@angular/router/testing';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../app.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  constructor(private route:ActivatedRoute,private router:Router, private authenticate : AuthenticateService) { }\n\n  input_type=\"password\";\n  formdata;\n  ngOnInit()\n  {\n    this.formdata = new FormGroup({\n      username : new FormControl(\"\", Validators.compose([\n        Validators.required\n      ])),\n      password : new FormControl(\"\", Validators.compose([\n        Validators.required\n      ]))\n    })\n  };\n\n  submitted = false;\n  authenticated = false;\n  onSubmit(data)\n  {\n    \n    this.submitted = true;\n    if(this.formdata.valid)\n    {\n      //authenticate if data is valid\n      console.log('In login.component.ts  :username :'+data.username+' password :'+data.password);\n      //calling service for authentication\n      this.authenticated = this.authenticate.authenticate_user(data.username,data.password);\n    }\n    \n    //console.log('In login.component.ts Authenticated :'+this.authenticated);\n  }\n\n  onCancelClick()\n  {\n    this.formdata.reset();\n  };\n\n  onRegisterClick()\n  {\n    this.router.navigate(['/register'],{relativeTo:this.route});\n  }\n\n  //show password : changes input type for the password field\n  onCheckboxChange()\n  {\n    if(this.input_type==\"password\")\n    {\n      this.input_type=\"text\";\n    }\n    else\n    {\n      this.input_type=\"password\";\n    }\n  }\n\n  get username() {return this.formdata.get('username'); }\n  get password() {return this.formdata.get('password'); }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class MyHttpInterceptor implements HttpInterceptor {\nconstructor() { }\n\nintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\nconsole.log(\"intercepted request ... \");\n\n// Clone the request to add the new header.\n// const authReq = req.clone({ \n//     headers: req.headers.set(\"withCredentials\", \"true\")});\n\n    var req = req.clone({\n        withCredentials: true\n    });\n\nconsole.log(\"Sending request with new header now ...\");\n\nreturn next.handle(req);\n//send the newly created request\n// return next.handle(authReq)\n// .catch((error, caught) => {\n// //intercept the respons error and displace it to the console\n// console.log(\"Error Occurred\");\n// console.log(error);\n// //return the error to the method that called it\n// return Observable.throw(error);\n// }) as any;\n}\n}","module.exports = \"\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\n\\n<div class=\\\"modal\\\" style=\\\"display: block\\\">\\n  <form class=\\\"modal-content animate\\\" [formGroup]=\\\"formdata\\\" (ngSubmit)=\\\"on_submit(formdata.value)\\\">\\n\\n    <div class=\\\"container\\\">\\n      \\n        <label for=\\\"name\\\"><b>Name</b></label><span style=\\\"color: red\\\">*</span>\\n        <input id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Enter Name\\\" name=\\\"name\\\" formControlName=\\\"name\\\">\\n        \\n        <div *ngIf=\\\" name.errors?.required && ( !name.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Name is required.</div>\\n\\n        <!-- username is a readonly property so it can't be changed-->\\n        <label for=\\\"username\\\"><b>Username</b></label><span style=\\\"color: red\\\">*</span>\\n        <input type=\\\"text\\\" placeholder=\\\"Enter Username\\\" name=\\\"Username\\\" formControlName=\\\"username\\\" readonly>\\n\\n        <label for=\\\"age\\\"><b>Age</b></label><span style=\\\"color: red\\\">*</span>\\n        <input type=\\\"text\\\" placeholder=\\\"Enter Age\\\" name=\\\"age\\\" formControlName=\\\"age\\\">\\n        <div *ngIf=\\\" age.errors?.required && ( !age.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Age is required.</div>\\n        <div *ngIf=\\\"age.errors?.agevalidator\\\" class=\\\"alert alert-danger\\\">Age must be greater than 18</div>\\n\\n        <label for=\\\"password\\\"><b>Password</b></label><span style=\\\"color: red\\\">*</span>\\n        <input type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n        <div *ngIf=\\\" password.errors?.required && ( !password.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Password is required.</div>\\n        <!--confirm password still remaining-->\\n        <!--<div *ngIf=\\\"confirmpassword.errors?.confirmingpassword\\\"  class=\\\"alert alert-danger\\\">Password does not match.</div>-->\\n        \\n      <button type=\\\"submit\\\">Save Changes</button> <!-- [disabled]=\\\"formdata.invalid\\\"-->\\n    </div>\\n\\n    <div class=\\\"container\\\" style=\\\"background-color:#f1f1f1\\\">\\n      <button type=\\\"button\\\" class=\\\"cancelbtn\\\" (click)=\\\"onLogOutClick()\\\">Log Out</button>      \\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Http, Headers, HttpModule} from '@angular/http';\nimport { HttpClient, HttpClientModule} from '@angular/common/http';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { EditDetailsService } from './../edit-details.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css', '../app.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  submitted = false;\n  formdata;\n  ngOnInit() {\n    this.formdata = new FormGroup({\n      name : new FormControl( \"\", Validators.compose([\n        Validators.required\n      ])),\n      age : new FormControl(\"\", Validators.compose([\n        Validators.required\n      ])),\n      username : new FormControl(\"\", Validators.compose([\n        Validators.required,\n        Validators.minLength(4)\n      ])),\n      password : new FormControl(\"\", Validators.compose([\n        Validators.required\n      ]))\n    })\n  };\n\n  call_server() : Observable<Object>\n  {\n    console.log('calling profile');\n    return this.http.get<Object>('http://localhost:8080/profile', {});\n    \n  }\n\n  user_details;\n  constructor(private route:ActivatedRoute,private router:Router, private http:HttpClient, private edit_service : EditDetailsService) \n  {\n    this.call_server().subscribe( data => {\n      this.user_details = data;\n      if(this.user_details.name == \"\" && this.user_details.username==\"\")\n      {\n        console.log('User_details are not there');\n        alert('User has not logged in!!')\n        this.router.navigate(['/'],{relativeTo:this.route});\n      }\n      \n      console.log('inside profile constructor subscribe');\n      //setting values in formdata\n      console.log('User\\'s name :'+this.user_details.name+\" username :\"+this.user_details.username+\" password :\"+this.user_details.password+\" age :\"+this.user_details.age);\n      //this.formdata.name = this.user_details.name;\n      this.formdata.patchValue({  // setValue method can also be used\n        name: this.user_details.name,\n        age: this.user_details.age,\n        username : this.user_details.username,\n        password : this.user_details.password\n       }); \n    });\n   }\n\n   on_submit(data)\n   {\n     this.submitted = true;\n     if(this.formdata.valid)\n     {\n      this.edit_service.edit_user(data.name, data.age, data.username, data.password);\n     }\n    \n   }\n\n  onLogOutClick()\n  {\n    this.call_Server().subscribe();\n    alert('Logged Out!!');\n    this.router.navigate(['/'],{relativeTo:this.route});\n  }\n\n  call_Server()\n  {\n    //log out just required to clear session \n    return this.http.get('http://localhost:8080/logout', {}); //{ withCredentials: true } now my-interceptor will send withCredentials:true with every request\n  }\n\n  get name() {return this.formdata.get('name'); }\n  get age() { return this.formdata.get('age'); }\n  get username() {return this.formdata.get('username'); }\n  get password() {return this.formdata.get('password'); }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport {Router, ActivatedRoute} from '@angular/router';\n//import { filter, map, catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/retry';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http : HttpClient, private route:ActivatedRoute, private router:Router) { };\n  catched_error = false;\n\n  register_user(na, a, uname, pw)\n  {\n    this.call_Server(na, a, uname, pw).subscribe(data => {\n      \n    });\n    console.log('before if :catched_error :'+this.catched_error);\n      if(this.catched_error)\n      {\n        alert('User already exists!!');\n        this.router.navigate(['/register'],{relativeTo:this.route});\n      }\n      else\n      { \n        console.log('In if :catched_error :'+this.catched_error);\n        alert('User details saved successfully');\n        this.router.navigate(['/'],{relativeTo:this.route});\n      }\n      console.log('after if :catched_error :'+this.catched_error); \n  }\n\n  call_Server(na, a, uname, pw)\n  {\n    return this.http.post('http://localhost:8080/register', { name : na, age:a, username : uname, password :pw}, {})\n    .catch((err: HttpErrorResponse) => {\n\n      if (err.error instanceof Error) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', err.error.message);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        this.catched_error = true;\n        console.error(`Backend returned code ${err.status}, body was: ${err.error}`);\n      }\n\n      // ...optionally return a default fallback value so app can continue (pick one)\n      // which could be a default value\n      // return Observable.of<any>({my: \"default value...\"});\n      // or simply an empty observable\n      return Observable.empty();//throw(err.statusText);\n    });\n  }\n}\n","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\n\\n<div class=\\\"modal\\\" style=\\\"display: block\\\">\\n  <form class=\\\"modal-content animate\\\" [formGroup]=\\\"formdata\\\" (ngSubmit)=\\\"onSubmit(formdata.value)\\\">\\n\\n    <div class=\\\"container\\\">\\n      \\n        <label for=\\\"name\\\"><b>Name</b></label><span style=\\\"color: red\\\">*</span>\\n        <input id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Enter Name\\\" name=\\\"name\\\" formControlName=\\\"name\\\">\\n        \\n        <!--<div [hidden]=\\\"!submitted && (name.valid || name.pristine)\\\" class=\\\"alert alert-danger\\\">Name is required.</div>-->\\n        <div *ngIf=\\\" name.errors?.required && ( !name.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Name is required.</div>\\n        <!--<div [hidden]=\\\"!submitted && (formdata.controls.name.valid && formdata.controls.name.dirty)\\\" class=\\\"alert alert-danger\\\">Name is required.</div>-->\\n\\n        <label for=\\\"username\\\"><b>Username</b></label><span style=\\\"color: red\\\">*</span>\\n        <input type=\\\"text\\\" placeholder=\\\"Enter Username\\\" name=\\\"Username\\\" formControlName=\\\"username\\\">\\n        <div *ngIf=\\\"username.errors?.required && ( !username.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Username is required.</div> <!--!(username.pristine || username.valid)-->\\n        <div *ngIf=\\\"username.errors?.minlength && ( !username.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">UserName must be at least 4 characters long.</div>\\n\\n        <label for=\\\"age\\\"><b>Age</b></label><span style=\\\"color: red\\\">*</span>\\n        <input type=\\\"text\\\" placeholder=\\\"Enter Age\\\" name=\\\"age\\\" formControlName=\\\"age\\\">\\n        <div *ngIf=\\\"age.errors?.required && (!age.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Age is required.</div>  <!--!(age.pristine || age.valid)-->\\n        <div *ngIf=\\\"age.errors?.agevalidator && ( !age.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Age must be greater than 18</div>\\n\\n        <label for=\\\"password\\\"><b>Password</b></label><span style=\\\"color: red\\\">*</span>\\n        <input type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n        <div *ngIf=\\\" password.errors?.required && ( !password.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Password is required.</div>\\n\\n        <!-- confirm password validation still remaining-->\\n        <label for=\\\"confirmpassword\\\"><b>Confirm Password</b></label><span style=\\\"color: red\\\">*</span>\\n        <input type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" name=\\\"confirmpassword\\\" formControlName=\\\"confirmpassword\\\">\\n        <div *ngIf=\\\" confirmpassword.errors?.required && ( !confirmpassword.pristine || submitted)\\\" class=\\\"alert alert-danger\\\">Confirm Password is required.</div>\\n        <!--<div *ngIf=\\\"confirmpassword.errors?.confirmingpassword\\\"  class=\\\"alert alert-danger\\\">Password does not match.</div>-->\\n        \\n      <button type=\\\"submit\\\" >Register</button> <!--[disabled]=\\\"formdata.invalid\\\"-->\\n    </div>\\n\\n    <div class=\\\"container\\\" style=\\\"background-color:#f1f1f1\\\">\\n      <button type=\\\"button\\\" class=\\\"cancelbtn\\\" (click)=\\\"onCancelClick()\\\">Cancel</button>      \\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators, MinLengthValidator, ValidatorFn, AbstractControl} from '@angular/forms';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { agevalidator } from './agevalidator';\nimport { RegisterService} from './../register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../app.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  submitted = false;\n  constructor(private route:ActivatedRoute,private router:Router, private register : RegisterService) { }\n\n  formdata;\n  ngOnInit() \n  {\n    this.formdata = new FormGroup({\n      name : new FormControl(\"\", Validators.compose([\n        Validators.required\n      ])),\n      username : new FormControl(\"\", Validators.compose([\n        Validators.required,\n        Validators.minLength(4)\n      ])),\n      age : new FormControl(\"\", Validators.compose([\n        Validators.required,\n        this.agevalidator\n      ])),\n      password : new FormControl(\"\", Validators.compose([\n        Validators.required\n      ])),\n      confirmpassword : new FormControl(\"\", Validators.compose([\n        Validators.required,\n        //this.confirmingpassword\n      ]))\n    })\n  }\n\n  /*passwordvalidator(control : FormControl)\n  {\n    if(this.formdata.password != this.formdata.confirmpassword)\n    {\n      return { control : true};\n    }\n    return null;\n  };\n  \n  function passwordvalidator(control: AbstractControl): { [key: string]: boolean } | null {\n  if (control.value !== RegisterComponent.formdata.password) {\n      return { 'confirmpassword': true };\n  }\n  return null;\n}\n  */\n\n  agevalidator(control) {\n    if( control.value < 18)\n    {\n      return { 'age' : true};\n    }\n  }\n\n  /*confirmingpassword(control) \n  {\n    if( control.value != this.password)\n    {\n      return { 'confirmpassword' : true};\n    }\n  }*/\n\n  onSubmit(data)\n  {\n    this.submitted = true;\n    // if(this.formdata.valid)\n    // {\n    //   alert('User details saved successfully!');\n    //   this.formdata.reset();\n    //   this.router.navigate(['/'],{relativeTo:this.route});\n    // }\n    // else\n    // {\n    //   alert('Error!');\n    // }\n    if(this.formdata.valid)\n    {\n      this.register.register_user(data.name, data.age, data.username, data.password);\n    }\n  }\n\n  onCancelClick()\n  {\n    this.formdata.reset();\n    this.submitted = false;\n  };\n\n  get name() {return this.formdata.get('name'); }\n  get username() {return this.formdata.get('username'); }\n  get age() {return this.formdata.get('age'); }\n  get password() {return this.formdata.get('password'); }\n  get confirmpassword() {return this.formdata.get('confirmpassword'); }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}